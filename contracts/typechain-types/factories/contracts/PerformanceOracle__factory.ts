/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PerformanceOracle,
  PerformanceOracleInterface,
} from "../../contracts/PerformanceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_pythContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "MarketValueCalculated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMarketValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "performanceScore",
        type: "uint256",
      },
    ],
    name: "PerformanceUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "priceFeedId",
        type: "bytes32",
      },
    ],
    name: "addValidPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedUpdaters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "driverMarketValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "driverPerformance",
    outputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lapTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgSpeed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "overtakes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "consistencyScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "driverPerformanceScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
    ],
    name: "getDriverValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
    ],
    name: "getPerformanceScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "getRacePerformance",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "raceId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lapTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "avgSpeed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "position",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "overtakes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "points",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "consistencyScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
        ],
        internalType: "struct PerformanceOracle.PerformanceData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pyth",
    outputs: [
      {
        internalType: "contract IPyth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lapTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgSpeed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "overtakes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "consistencyScore",
        type: "uint256",
      },
    ],
    name: "recordPerformance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "setAuthorizedUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "priceUpdateData",
        type: "bytes[]",
      },
    ],
    name: "updatePerformanceViaPyth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_pythContract",
        type: "address",
      },
    ],
    name: "updatePythAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "validPriceFeeds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346100dd57601f610ee138819003918201601f19168301916001600160401b038311848410176100e2578084926020946040528339810103126100dd57516001600160a01b0390818116908190036100dd5733156100c457600080546001600160a01b03198082163390811784556040805196909593167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36001541617600155338152600660205220600160ff19825416179055610de890816100f98239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600480361015610021575b505050361561001f57600080fd5b005b60009260e08435811c91826234230a14610c35575081630dbf8bf014610c085781633a52ed6514610b695781633ccfd60b14610bb857816348d6b2a514610b905781635c0a813214610b695781636deca46614610b20578163715018a614610ac35781637dd7ae9d146106315781638aa315e41461044b5781638da5cb5b146104225781638ff29cfe146103e357816399fc65d414610389578163defd7656146102fc578163f2fde38b1461026b578163f98d06f014610241578163f99bd11914610126575063fd3727c90361001157346101225760203660031901126101225761010a610c8c565b35825260056020528120805460ff1916600117905580f35b8280fd5b8385843461023d57610120938361013c36610c76565b8251959161014987610cb8565b82875282602088015282848801528260608801528260808801528260a08801528260c088015282858801528261010080980152825260026020528282209082526020522091845192839161019c83610cb8565b8154968784526001830154916020850192835260028401549180860192835260038501549160608701928352850154926080870193845260058601549460a088019586528a60ff600860068a01549960c08c019a8b528c60078201549c019b8c520154169a019915158a5282519b8c525160208c015251908a01525160608901525160808801525160a08701525160c0860152519084015251151590820152f35b5080fd5b5050503461023d578160031936011261023d5760015490516001600160a01b039091168152602090f35b50503461012257602036600319011261012257610286610c5b565b9061028f610c8c565b6001600160a01b039182169283156102e6575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b90503461038557826101209461031136610c76565b908252600260205282822090825260205220908154936001830154936002840154906003850154908501549060058601549260068701549460ff600860078a0154990154169881519a8b5260208b01528901526060880152608087015260a086015260c08501528301521515610100820152f35b8380fd5b5050503461023d578060031936011261023d576103a4610c5b565b90602435908115158203610385576103e0926103be610c8c565b60018060a01b03168452600660205283209060ff801983541691151516179055565b80f35b5050503461023d57602036600319011261023d5760209160ff9082906001600160a01b0361040f610c5b565b1681526006855220541690519015158152f35b5050503461023d578160031936011261023d57905490516001600160a01b039091168152602090f35b838584606036600319011261023d5780356044359367ffffffffffffffff80861161062d573660238701121561062d57858401359581871161062957602491828201918336918a60051b01011161062557600154845163d47eed4560e01b81526020936001600160a01b0390921691908481806104cb8e868e8401610ceb565b0381865afa90811561061b578a916105cd575b5080341061059857823b1561059457916105109a918a938a89519d8e9586948593631df3cbc560e31b85528401610ceb565b03925af1801561058a57610564575b5083865260038152828620549481528286205483519586529085015235927f0df63f8e63b62d5a9a9bc0a8109ce13e27710a7e86ab066451c248865bae30c49190a380f35b879691961161057a57958252939493858761051f565b634e487b7160e01b815260418552fd5b84513d89823e3d90fd5b8980fd5b865162461bcd60e51b8152808a018690526010818801526f496e73756666696369656e742066656560801b6044820152606490fd5b9050843d8611610614575b601f8101601f191682018581118382101761060257869183918a528101031261059457518b6104de565b634e487b7160e01b8c5260418b52878cfd5b503d6105d8565b87513d8c823e3d90fd5b8680fd5b8580fd5b8480fd5b919290503461038557610100928360031936011261062d5780359360248035916084359060e43593338a526020946006865260ff888c2054168015610ab0575b15610a7d5783151580610a72575b15610a3d576064938482116109fc5760088b8d61073d948d888e968b8e8951998a976106aa89610cb8565b8d89528d838a01936044358552838b019535865260608b0196875260808b019760a435895260a08c019960c4358b5260c08d019b8c528c019b428d52019b60018d52835260028152838320918352522099518a555160018a0155516002890155516003880155518d87015551600586015551600685015551600784015551151591019060ff801983541691151516179055565b888a5260028552868a20908a5284528589209086519761075c89610cb8565b825489526001830154868a0152600283015491888a01928352600384015499606081019a8b5288850154916080820192835260ff600860058801549760a0850198895260068101549660c0860197885260078201549086015201541615159101528a8c5260038752888c205499518060150390601582116109ea5786820291820487149060151417156109c057601490049351858102908082048714901517156109c05760199004908582116109e2575b5191600a830292808404600a14901517156109c0578583116109da575b519251614e1f1981019081116109c057858102908082048714901517156109c0576113889004938585116109d2575b6028810290808204602814901517156109c0576014820291808304601414901517156109c0579061088991610d8f565b600f820291808304600f14901517156109ae57906108a691610d8f565b600f820291808304600f149015171561099c57906108c391610d8f565b600a820291808304600a149015171561098a57906108e091610d8f565b9169d3c21bcecceda1000000908382029182048403610979575092600a60a096937fce59846a4e362e248b72cd4f4768ab9af7f46c533ba3b8a642432ff2b8d2dde298969360609604938a8c526003845284868d2055835204838a20558251948552840152820152601d60608201527f506572666f726d616e63652d62617365642063616c63756c6174696f6e0000006080820152a280f35b634e487b7160e01b8a526011865289fd5b634e487b7160e01b8a5260118652838afd5b634e487b7160e01b8b5260118752848bfd5b634e487b7160e01b8c5260118852858cfd5b634e487b7160e01b8d5260118952868dfd5b859450610859565b85925061082a565b85915061080d565b634e487b7160e01b8e5260118a52878efd5b885162461bcd60e51b81528089018890526019818801527f496e76616c696420636f6e73697374656e63792073636f72650000000000000060448201528590fd5b875162461bcd60e51b81528088018790526010818701526f24b73b30b634b2103837b9b4ba34b7b760811b6044820152606490fd5b50601484111561067f565b875162461bcd60e51b8152808801879052600e818701526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b508a546001600160a01b03163314610671565b8434610b1d5780600319360112610b1d57610adc610c8c565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b84833461023d57602036600319011261023d57356001600160a01b0381169081900361023d57610b4e610c8c565b6bffffffffffffffffffffffff60a01b600154161760015580f35b50503461012257602036600319011261012257602092818392358252845220549051908152f35b5050346101225760203660031901126101225760209282913581526003845220549051908152f35b5050503461023d578160031936011261023d57610bd3610c8c565b8180808060018060a01b038154164790828215610bff575bf115610bf5575080f35b51903d90823e3d90fd5b506108fc610beb565b505034610122576020366003190112610122578160209360ff923581526005855220541690519015158152f35b859085853461038557602036600319011261038557926020933581526003845220548152f35b600435906001600160a01b0382168203610c7157565b600080fd5b6040906003190112610c71576004359060243590565b6000546001600160a01b03163303610ca057565b60405163118cdaa760e01b8152336004820152602490fd5b610120810190811067ffffffffffffffff821117610cd557604052565b634e487b7160e01b600052604160045260246000fd5b9160208181850182865252604084019360408360051b82010194846000925b858410610d1b575050505050505090565b90919293949596603f198282030184528735601e1984360301811215610c7157830186810191903567ffffffffffffffff8111610c71578036038313610c715787828280600196849695859652848401376000828201840152601f01601f1916010199019796959190910193019190610d0a565b91908201809211610d9c57565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220cf225382b8c7aedb8683eb52bd18ea3c3fb8d0a3fcc73565d5a6bc44718f237764736f6c63430008140033";

type PerformanceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PerformanceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PerformanceOracle__factory extends ContractFactory {
  constructor(...args: PerformanceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _pythContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_pythContract, overrides || {});
  }
  override deploy(
    _pythContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_pythContract, overrides || {}) as Promise<
      PerformanceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PerformanceOracle__factory {
    return super.connect(runner) as PerformanceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PerformanceOracleInterface {
    return new Interface(_abi) as PerformanceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PerformanceOracle {
    return new Contract(address, _abi, runner) as unknown as PerformanceOracle;
  }
}
