/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimplePerformanceOracle,
  SimplePerformanceOracleInterface,
} from "../../contracts/SimplePerformanceOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMarketValue",
        type: "uint256",
      },
    ],
    name: "MarketValueUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMarketValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPerformanceScore",
        type: "uint256",
      },
    ],
    name: "PerformanceUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "addAuthorizedUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedUpdaters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "driverIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "raceIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "lapTimes",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "avgSpeeds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "positions",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "overtakes",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "points",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "consistencyScores",
        type: "uint256[]",
      },
    ],
    name: "batchRecordPerformance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "driverMarketValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "driverPerformance",
    outputs: [
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lapTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgSpeed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "overtakes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "consistencyScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "driverPerformanceScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
    ],
    name: "getMarketValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
    ],
    name: "getPerformanceData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "raceId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lapTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "avgSpeed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "position",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "overtakes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "points",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "consistencyScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct SimplePerformanceOracle.PerformanceData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
    ],
    name: "getPerformanceScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "driverId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lapTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgSpeed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "overtakes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "consistencyScore",
        type: "uint256",
      },
    ],
    name: "recordPerformance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "removeAuthorizedUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461009157331561007b5760008054336001600160a01b0319821681178355604080519390929091906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a3338152600460205220805460ff19166001179055610da290816100978239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe6102e080604052600436101561001457600080fd5b60003560e01c9081633a52ed65146109cf5750806348d6b2a5146109a3578063554070bc146109a35780635c0a813214610977578063603cda0914610931578063715018a6146108d85780637dd7ae9d146107475780638c9b9fdc146106fe5780638da5cb5b146106d55780638ff29cfe14610692578063b3bbb7ed1461059c578063defd76561461051c578063ef09d45c1461014f5763f2fde38b146100ba57600080fd5b3461014a57602036600319011261014a576004356001600160a01b038181169182900361014a576100e9610a3e565b811561013157600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b3461014a5761010036600319011261014a5760043567ffffffffffffffff811161014a57610181903690600401610a0d565b60e0526102c05260243567ffffffffffffffff811161014a576101a8903690600401610a0d565b60c05260a05260443567ffffffffffffffff811161014a576101ce903690600401610a0d565b610220526101a05260643567ffffffffffffffff811161014a576101f6903690600401610a0d565b6080526102005260843567ffffffffffffffff811161014a5761021d903690600401610a0d565b610120526101605267ffffffffffffffff60a4351161014a576102453660a435600401610a0d565b6102a0526101e05267ffffffffffffffff60c4351161014a5761026d3660c435600401610a0d565b610240526101c05267ffffffffffffffff60e4351161014a576102953660e435600401610a0d565b610260526101405233600052600460205260ff604060002054168015610508575b6102bf90610a6a565b6102ce60c05160e05114610d01565b6102de6101205160e05114610d01565b6000610180525b60e051610180518181101561050657610301916102c051610d46565b35610100526103186101805160c05160a051610d46565b356102805261033161018051610220516101a051610d46565b356103456101805160805161020051610d46565b359061048161035e610180516101205161016051610d46565b35610469610376610180516102a0516101e051610d46565b359461038c61018051610240516101c051610d46565b35956103a2610180516102605161014051610d46565b3591841515806104fb575b6103b690610aa7565b6103c36064841115610ae6565b6103cb610b32565b966102805188526020880152604087015283606087015280608087015260a086019680885260c08701838152600760e0890142815261010051600052600192836020526040600020610280516000526020526040600020938b51855560208c01519085015560408b01519b60029c8d860155608060608d01519c60039d8e880155015160048601555160058501555160068401555191015584610b76565b92610100516000526020528260406000205582610c73565b916101005160005260205281604060002055604051918252602082015261028051907f0df63f8e63b62d5a9a9bc0a8109ce13e27710a7e86ab066451c248865bae30c460406101005192a36101805160001981146104e557600101610180526102e5565b634e487b7160e01b600052601160045260246000fd5b5060148511156103ad565b005b506000546001600160a01b031633146102b6565b3461014a5761052a366109f7565b9060005260016020526040600020906000526020526101006040600020805490600181015490600281015460038201546004830154906005840154926007600686015495015495604051978852602088015260408701526060860152608085015260a084015260c083015260e0820152f35b3461014a576105aa366109f7565b90600060e06105b7610b32565b8281528260208201528260408201528260608201528260808201528260a08201528260c0820152015260005260016020526040600020906000526020526101006040600020610604610b32565b8154918282526001810154602083019081526002820154604084019081526003830154606085019081526004840154916080860192835260058501549360a0870194855260e0600760068801549760c08a01988952015497019687526040519788525160208801525160408701525160608601525160808501525160a08401525160c08301525160e0820152f35b3461014a57602036600319011261014a576004356001600160a01b0381169081900361014a576000526004602052602060ff604060002054166040519015158152f35b3461014a57600036600319011261014a576000546040516001600160a01b039091168152602090f35b3461014a57602036600319011261014a576004356001600160a01b0381169081900361014a5761072c610a3e565b6000908152600460205260409020805460ff19166001179055005b3461014a5761010036600319011261014a5733600052600460205260ff6040600020541680156108c4575b61077b90610a6a565b6084351515806108b7575b61078f90610aa7565b61079e606460e4351115610ae6565b6107a6610b32565b6024358152600760e0602083019260443584526040810160643581526060820160843581526080830160a435815260a084019160c435835260c085019360e435855242878701526004356000526001602052604060002060243560005260205260406000209886518a555160018a0155516002890155516003880155516004870155516005860155516006850155015191015561084d60e43560a43560c435608435610b76565b60043560005260036020528060406000205561086b60843582610c73565b906004356000526002602052816040600020556040519182526020820152602435907f0df63f8e63b62d5a9a9bc0a8109ce13e27710a7e86ab066451c248865bae30c4604060043592a3005b5060146084351115610786565b506000546001600160a01b03163314610772565b3461014a57600036600319011261014a576108f1610a3e565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461014a57602036600319011261014a576004356001600160a01b0381169081900361014a5761095f610a3e565b6000908152600460205260409020805460ff19169055005b3461014a57602036600319011261014a5760043560005260036020526020604060002054604051908152f35b3461014a57602036600319011261014a5760043560005260026020526020604060002054604051908152f35b3461014a57602036600319011261014a57602090600435600052600382526040600020548152f35b604090600319011261014a576004359060243590565b9181601f8401121561014a5782359167ffffffffffffffff831161014a576020808501948460051b01011161014a57565b6000546001600160a01b03163303610a5257565b60405163118cdaa760e01b8152336004820152602490fd5b15610a7157565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b15610aae57565b60405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103837b9b4ba34b7b760811b6044820152606490fd5b15610aed57565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c696420636f6e73697374656e63792073636f7265000000000000006044820152606490fd5b60405190610100820182811067ffffffffffffffff821117610b5357604052565b634e487b7160e01b600052604160045260246000fd5b919082018092116104e557565b9092919260009180151580610c68575b610c15575b50600a810290808204600a14901517156104e557610ba891610b69565b6005830290838204600514841517156104e557601491610bc791610b69565b9211610c03575b60640190816064116104e5578181029181830414901517156104e5576103e89060c8900481811115610bfe575090565b905090565b90606481018091116104e55790610bce565b9091816015039160158311610c545760328302928304603214906015141715610c4057509038610b8b565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b82526011600452602482fd5b506014811115610b86565b612710908181029181830414811517156104e557819260018114600014610cb1575050506096810290808204609614901517156104e5576064900490565b60038111610cd657505050607d810290808204607d14901517156104e5576064900490565b600a1015610ce357505090565b6210c8e09192500290808204606e14901517156104e5576064900490565b15610d0857565b60405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606490fd5b9190811015610d565760051b0190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122097bdb7a54403ecad030d40744735e3380ef205ec0193b49bbc66a6079a0cb32864736f6c63430008140033";

type SimplePerformanceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimplePerformanceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimplePerformanceOracle__factory extends ContractFactory {
  constructor(...args: SimplePerformanceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimplePerformanceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SimplePerformanceOracle__factory {
    return super.connect(runner) as SimplePerformanceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimplePerformanceOracleInterface {
    return new Interface(_abi) as SimplePerformanceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimplePerformanceOracle {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SimplePerformanceOracle;
  }
}
